{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","class","x1","y1","x2","y2","cx","cy","r","WrongLetters","className","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","Notification","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9ca5cc8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <>\n           <h1>Hangman</h1> \n           <p>Find the hidden word - Enter a letter</p>\n        </>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Figure = ({wrongLetters}) => {\n    const errors = wrongLetters.length;\n    return (\n        <svg height=\"250\" width=\"200\" class=\"figure-container\">\n        {/* <!-- Rod --> */}\n        <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n        <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n        <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n        <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n        {/* <!-- Head --> */}\n        { errors > 0  && <circle cx=\"140\" cy=\"70\" r=\"20\"  />}\n        {/* <!-- Body --> */}\n        { errors > 1  && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n        {/* <!-- Arms --> */}\n        { errors > 2  && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\"  />}\n        { errors > 3  && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\"  />}\n        {/* <!-- Legs --> */}\n        { errors > 4  && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\"  />}\n        { errors > 5  && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n      </svg>\n    )\n}\n\nexport default Figure\n","import React from 'react'\n\nconst WrongLetters = ({wrongLetters}) => {\n    return (\n        <div className=\"wrong-letters-container\">\n            <div>\n            {wrongLetters.length > 0 && <p>Wrong</p>}\n            {wrongLetters\n            .map((letter,i) => <span key = {i}>{letter}</span>)\n            .reduce((prev,curr) => prev === null ? [curr] : [prev , ',' , curr] , null)}\n            </div>\n            \n        </div>\n\n    )\n}\n\nexport default WrongLetters\n","import React from 'react'\n\nfunction Word  ( {selectedWord , correctLetters }) {\n    return (\n        <div className=\"word\">\n            {selectedWord.split('').map((letter , i) =>{\n            return(\n            <span className=\"letter\" key={i}>\n                {correctLetters.includes(letter) ? letter : ''}\n            </span>\n            )\n            })}\n        </div>\n    )\n}\n\nexport default Word\n","export function showNotification(setter){\n    setter(true);\n    setTimeout(() => {\n        setter(false);\n    }, 2000);\n}\n\nexport function checkWin(correct, wrong, word) {\n    let status = 'win';\n  \n    // Check for win\n    word.split('').forEach(letter => {\n      if(!correct.includes(letter)){\n        status = '';\n      }\n    });\n    \n    // Check for lose\n    if(wrong.length === 6) status = 'lose';\n  \n    return status\n  }","import React, {useEffect} from 'react';\nimport { checkWin } from '../helpers/helpers';\n\nconst Popup = ( {correctLetters, wrongLetters , selectedWord , setPlayable , playAgain}) => {\n    let finalMessage = '';\n    let finalMessageRevealWord = '' ;\n    let playable = true;\n\n    if( checkWin (correctLetters,wrongLetters,selectedWord  ) === 'win') {\n        finalMessage='Congratulations! You won! ðŸ˜ƒ';\n        playable = false;\n    } else if (checkWin (correctLetters,wrongLetters,selectedWord  ) === 'lose'){\n        finalMessage='Unfortunately you lost.  ðŸ˜•';\n        finalMessageRevealWord = `...the word was: ${selectedWord}`;\n        playable = false;\n    }\n    // if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ) {\n    //     finalMessage = 'Congratulations! You won! ðŸ˜ƒ';\n    //     playable = false;\n    //   } else if( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\n    //     finalMessage = 'Unfortunately you lost. ðŸ˜•';\n    //     finalMessageRevealWord = `...the word was: ${selectedWord}`;\n    //     playable = false;\n    //   }\n    useEffect(() => {\n        setPlayable(playable)\n    });\n    return (\n        <div className=\"popup-container\" style={finalMessage !== '' ? {display : 'flex'} : {}}>\n            <div className=\"popup\">\n            <h2>{finalMessage}</h2>\n            <h3>{finalMessageRevealWord}</h3>\n            <button onClick = {playAgain}>Play Again</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n","import React from 'react'\n\nconst Notification = ({showNotification}) => {\n    return (\n        <div className={`notification-container ${showNotification ? 'show' : ''}`} >\n            <p>You have already entered this letter</p>\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState , useEffect} from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from'./components/WrongLetters';\nimport Word from './components/Word';\nimport Popup from './components/Popup';\nimport Notication from './components/Notification';\nimport {showNotification as show} from './helpers/helpers';\n\nimport './App.css';\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [ playable, setPlayable ] = useState(true);\n  const [ correctLetters , setCorrectLetters ] = useState([]);\n  const [ wrongLetters , setWrongLetters ] = useState([]);\n  const [ showNotification , setShowNotification ] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode} = event;\n        if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n    \n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              setCorrectLetters(correctLetters => [ ...correctLetters , letter]);\n            } else {\n              show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(wrongLetters => [ ...wrongLetters , letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n    }\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown',handleKeydown);\n  },[correctLetters, wrongLetters, playable]);\n\n  function playAgain(){\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random()* words.length);\n    selectedWord = words[random];\n  }\n\n  return (\n    <>\n      <Header/>\n      <div className=\"game-container\">\n        <Figure wrongLetters = { wrongLetters } />\n        <WrongLetters wrongLetters = { wrongLetters } />\n        <Word selectedWord = {selectedWord} correctLetters ={correctLetters}/>\n        \n      </div>\n      <Popup correctLetters = {correctLetters} wrongLetters = {wrongLetters} \n      selectedWord = {selectedWord} setPlayable={setPlayable} playAgain = {playAgain}/>\n      <Notication showNotification = {showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}